
PROBLEM STATEMENT: Using the given Salary, Income and Deduction tables, 
first write an sql query to populate the Emp_Transaction table as shown below and then generate a salary report as shown.

SALARY					EXPECTED OUTPUT - EMP_TRANSACTION				
EMP_ID	EMP_NAME     BASE_SALARY	       EMP_ID	EMP_NAME	TRNS_TYPE	AMOUNT	
1	Rohan	     5000			1	Rohan	    Insurance	        250	
2	Alex	     6000			2	Alex	    Insurance	        300	
3	Maryam	     7000			3	Maryam	    Insurance	        350	
					        1	Rohan	    House	        200	
					        2	Alex	    House	        240	
INCOME					        3	Maryam	    House	        280	
ID	INCOME	   PERCENTAGE			1	Rohan	    Basic	        5000	
1	Basic	   100			        2	Alex	    Basic	        6000	
2	Allowance   4			        3	Maryam	    Basic	        7000	
3	Others	    6			        1	Rohan	    Health	        300	
					        2	Alex	    Health	        360	
					        3	Maryam	    Health	        420	
DEDUCTION					1	Rohan	    Allowance	        200	
ID	DEDUCTION	PERCENTAGE		2	Alex	    Allowance	        240	
1	Insurance	5			3	Maryam	    Allowance	        280	
2	Health	6			        1	Rohan	    Others	        300	
3	House	4			        2	Alex	    Others	        360	
					        3	Maryam	    Others	        420	
									
EXPECTED OUTPUT - SALARY REPORT									
EMPLOYEE	BASIC	ALLOWANCE	OTHERS	GROSS	INSURANCE	HEALTH	HOUSE	TOTAL_DEDUCTIONS   NET_PAY
Alex	        6000	240	        360	6600	300	        360	240	900	           5700
Maryam	        7000	280	        420	7700	350	        420	280	1050	           6650
Rohan	        5000	200	        300	5500	250	        300	200	750	            4750



SALARY		
EMP_ID	EMP_NAME	BASE_SALARY
1	      Rohan	    5000
2	      Alex	    6000
3     	Maryam	  7000
		
		
INCOME		
ID	INCOME	PERCENTAGE
1  	Basic	     100
2	  Allowance 	4
3	  Others     	6
		
		
DEDUCTION		
ID	    DEDUCTION	PERCENTAGE
1     	Insurance 	5
2	      Health	    6
3	      House     	4


drop table if exists salary;
create table salary
(
	emp_id		int,
	emp_name	varchar(30),
	base_salary	int
);
insert into salary values(1, 'Rohan', 5000);
insert into salary values(2, 'Alex', 6000);
insert into salary values(3, 'Maryam', 7000);


drop table if exists income;
create table income
(
	id			int,
	income		varchar(20),
	percentage	int
);
insert into income values(1,'Basic', 100);
insert into income values(2,'Allowance', 4);
insert into income values(3,'Others', 6);


drop table if exists deduction;
create table deduction
(
	id			int,
	deduction	varchar(20),
	percentage	int
);
insert into deduction values(1,'Insurance', 5);
insert into deduction values(2,'Health', 6);
insert into deduction values(3,'House', 4);

----------------------Solutions---------------------------------------
drop table if exists emp_transaction;
create table emp_transaction
(
	emp_id		int,
	emp_name	varchar(50),
	trns_type	varchar(20),
	amount		numeric
);
insert into emp_transaction
select s.emp_id, s.emp_name, x.trns_type
, case when x.trns_type = 'Basic' then round(base_salary * (cast(x.percentage as decimal)/100),2)
	   when x.trns_type = 'Allowance' then round(base_salary * (cast(x.percentage as decimal)/100),2)
	   when x.trns_type = 'Others' then round(base_salary * (cast(x.percentage as decimal)/100),2)
	   when x.trns_type = 'Insurance' then round(base_salary * (cast(x.percentage as decimal)/100),2)
	   when x.trns_type = 'Health' then round(base_salary * (cast(x.percentage as decimal)/100),2)
	   when x.trns_type = 'House' then round(base_salary * (cast(x.percentage as decimal)/100),2) end as amount	   
from salary s
cross join (select income as trns_type, percentage from income
			union
			select deduction as trns_type, percentage from deduction) x;


select * from salary;
select * from income;
select * from deduction;
select * from emp_transaction;




-- Load data to emp_transaction table
insert into emp_transaction
select s.emp_id, s.emp_name, x.trns_type
, case when x.trns_type = 'Basic' then round(base_salary * (cast(x.percentage as decimal)/100),2)
	   when x.trns_type = 'Allowance' then round(base_salary * (cast(x.percentage as decimal)/100),2)
	   when x.trns_type = 'Others' then round(base_salary * (cast(x.percentage as decimal)/100),2)
	   when x.trns_type = 'Insurance' then round(base_salary * (cast(x.percentage as decimal)/100),2)
	   when x.trns_type = 'Health' then round(base_salary * (cast(x.percentage as decimal)/100),2)
	   when x.trns_type = 'House' then round(base_salary * (cast(x.percentage as decimal)/100),2) end as amount	   
from salary s
cross join (select income as trns_type, percentage from income
			union
			select deduction as trns_type, percentage from deduction) x;



-- SOLUTION PostgreSQL
select employee
, basic, allowance, others
, (basic + allowance + others) as gross
, insurance, health, house 
, (insurance + health + house) as total_deductions
, (basic + allowance + others) - (insurance + health + house) as net_pay
from crosstab('select emp_name, trns_type, sum(amount) as amount
			   from emp_transaction
			   group by emp_name, trns_type
			   order by emp_name, trns_type'
			  ,'select distinct trns_type from emp_transaction order by trns_type')
	as result(employee varchar, Allowance numeric, basic numeric, health numeric
			 , house numeric, insurance numeric, others numeric)




-- SOLUTION Microsoft SQL Server (Similar works for Oracle too, just replace [] with "")
select Employee
, Basic, Allowance, Others
, (Basic + Allowance + Others) as Gross
, Insurance, Health, House
, (Insurance + Health + House) as Total_Deductions
, ((Basic + Allowance + Others) - (Insurance + Health + House)) as Net_Pay
from 
    (
        select t.emp_name as Employee, t.trns_type, t.amount
        from emp_transaction t
        
    ) b
pivot 
    (
        sum(amount)
        for trns_type in ([Allowance],[Basic],[Health],[House],[Insurance],[Others])
    ) p;




